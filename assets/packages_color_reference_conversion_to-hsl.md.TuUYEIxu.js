import{_ as i,i as a,o as n,an as l}from"./chunks/framework.CCWC7B3L.js";const c=JSON.parse('{"title":"toHsl","description":"toHsl - 来自 Dora Pocket 的颜色“道具”，用于将任意颜色格式转换为 HSL 对象。","frontmatter":{"title":"toHsl","description":"toHsl - 来自 Dora Pocket 的颜色“道具”，用于将任意颜色格式转换为 HSL 对象。"},"headers":[],"relativePath":"packages/color/reference/conversion/to-hsl.md","filePath":"packages/color/reference/conversion/to-hsl.md","lastUpdated":1756905894000}'),h={name:"packages/color/reference/conversion/to-hsl.md"};function t(e,s,k,p,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="tohsl" tabindex="-1">toHsl <a class="header-anchor" href="#tohsl" aria-label="Permalink to “toHsl”">​</a></h1><p>将任意合法的颜色字符串或颜色对象转换为一个简化的 HSL 对象。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to “示例”">​</a></h2><h3 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to “基本用法”">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes vitesse-light vitesse-dark" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">toHsl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">#FF0000</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// =&gt; { h: 0, s: 100, l: 50 }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">toHsl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">rgb(0, 255, 0)</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// =&gt; { h: 120, s: 100, l: 50 }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 对于灰度颜色，色相 (h) 和饱和度 (s) 均为 0</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">toHsl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">#808080</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// =&gt; { h: 0, s: 0, l: 50 }</span></span></code></pre></div><h3 id="处理透明度" tabindex="-1">处理透明度 <a class="header-anchor" href="#处理透明度" aria-label="Permalink to “处理透明度”">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes vitesse-light vitesse-dark" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 当颜色包含透明度时，返回的对象会包含 &#39;a&#39; 属性</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">toHsl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">rgba(255, 0, 0, 0.5)</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// =&gt; { h: 0, s: 100, l: 50, a: 0.5 }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 当颜色完全不透明 (alpha = 1) 时，则不包含 &#39;a&#39; 属性</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">toHsl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">rgba(255, 0, 0, 1)</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// =&gt; { h: 0, s: 100, l: 50 }</span></span></code></pre></div><h2 id="签名与说明" tabindex="-1">签名与说明 <a class="header-anchor" href="#签名与说明" aria-label="Permalink to “签名与说明”">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes vitesse-light vitesse-dark" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * 将任意合法的颜色字符串或颜色对象转换为 HSL 对象。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * 返回的对象包含 h (0-360)，s (0-100)，l (0-100) 属性。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * 仅当输入颜色包含透明度 (alpha &lt; 1) 时，返回的对象才会包含 \`a\` 属性。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">param</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> 任意合法的颜色字符串（如 &#39;#FF0000&#39;）或颜色对象。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">returns</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> 一个包含 h, s, l 属性的 HSL 颜色对象，如果输入无效则返回 \`null\`。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> */</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> toHsl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> | </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">EsdoraColor</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">):</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> h</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> s</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> l</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> |</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> null</span></span></code></pre></div><h2 id="注意事项与边界情况" tabindex="-1">注意事项与边界情况 <a class="header-anchor" href="#注意事项与边界情况" aria-label="Permalink to “注意事项与边界情况”">​</a></h2><ul><li><strong>关于输出格式</strong>: 返回的对象中，<code>h</code> (色相) 的范围是 0-360，<code>s</code> (饱和度) 和 <code>l</code> (亮度) 的范围是 0-100。所有值都会被四舍五入为整数。</li><li><strong>关于透明度</strong>: 只有当颜色的 <code>alpha</code> 值小于 <code>1</code> 时，输出的对象才会包含 <code>a</code> 属性。</li><li><strong>关于无效输入</strong>: 当 <code>color</code> 参数为无效颜色字符串、空字符串、<code>null</code>、<code>undefined</code> 或无法解析的对象时，函数将返回 <code>null</code>。</li><li><strong>关于默认值</strong>: 如果内部转换得到的 HSL 对象缺少某些值（如 <code>undefined</code>），它们将被视为 <code>0</code> 进行处理。</li></ul><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to “相关链接”">​</a></h2><ul><li><strong>源码</strong>: <a href="hthttps://github.com/esdora-js/esdora/blob/main/packages/packages/color/src/conversion/to-hsl/index.ts" target="_blank" rel="noreferrer"><code>packages/packages/color/src/conversion/to-hsl/index.ts</code></a></li></ul>`,13)])])}const g=i(h,[["render",t]]);export{c as __pageData,g as default};
